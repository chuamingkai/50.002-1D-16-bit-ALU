const ADD= b000000
const SUB= b000001
const AND= b011000
const OR= b011110
const XOR= b010110
const A= b011010
const SHL= b100000
const SHR= b100001
const SRA= b100011
const CMPEQ= b110011
const CMPLT= b110101
const CMPLE= b110111
const MUL= b000010
const DIV=b000011

1. ADD_overflow
0111111111111111 + 
0000000000000001 = 
1000000000000000
32767+1=32768 ï¼ˆZ=0, V=1, N=1) [pos+pos; overflow]

2. SUBTRACT_overflow
1000000000000000 +1000000000000001
=1000000000000000
-0111111111111111= //C31=1
 0000000000000001 (Z=0, V=1, N=0) [neg-pos, overflow]

3. Non_overflow (when neg+ positive) 
1111000000001111+
0000111111110000=
1111111111111111 (Z=0, V=0, N=1) 

4. Compare (=) subtraction ouput=0 => Z=1 
1000000000000000 vs 1000000000000001
1000000000000000 vs 1000000000000000 = also shows if Z is working

5.Compare (<) subtraction ouput; n xor v(n=0 means positive difference, thus not smaller unless there's overflow;vice versa)
1111111111111101 1111111111111111 =0000000000000010 (eg. overflow) 
0000000000000001 00000000000000100 (no overflow) 
0000000000000100 0000000000000100 should give false

6.Compare(<=) z or (n xor v) 
0000000000000100 0000000000000100 should give true 
0000000000000100 0000000000000001 


7. Shift right 

8. Shift left 

9. Signed shift right 

10. Multiplier 

