module 16_bit_adder (
    //inputs 
    input alufn[6],
    input x[16],
    input y[16],
    
    //outputs
    output sum[16],
    output z,
    output v,
    output n
  ) {
  
 sig add_interim[16];
  
  
always {
    // ALUFN[0] == ADD
    if(alufn[0] == 0){
      add_interim = x + y;
    }else{
      add_interim = x - y;
    }
    
    sum = add_interim[15:0];
    
    
    if(add_interim == 0){
       z = 1;
    }else{
    z = 0;
    }
    v = (((x[15])&(y[15])&(~add_interim[15])) | ((~x[15])&(~y[15])&(add_interim[15])));
    n = add_interim[15];
    
       
  }
}
